knitr::opts_chunk$set(echo = TRUE)
library(forecast)
library(readr)
library(lubridate)
library(tidyverse)
library(gridExtra)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Default theme for charts
theme_set(
theme_bw() +
theme(
plot.title = element_text(face = "bold", size = 14),
plot.subtitle = element_text(
face = "italic", size = 10, colour = "green50"
)
)
)
source('../02 Task 2 - Transmission Price/builtin_functions_old/buitin_functions_full_1.R')
fit
df <- read.csv("../00 Data Retrieval and Cleaning/0_df_predictive_ch_spot_price.csv") %>% mutate(date = ymd_hms(date))
df <- read.csv("../00 Data Retrieval and Cleaning/0_df_predictive_ch_spot_price.csv") %>% mutate(date = ymd_hms(date))
regressors <- c("day_ahead_price_de", "day_ahead_price_fr", "actual_load_ch", "capacity_forecast_de_lu_ch", "solar_ch" ,"crossborder_actual_flow_fr_ch", "nuclear_ch", "nuclear_actual_aggregated_de")
fit<- inference("day_ahead_price_ch", regressors = regressors, df = df)
inference<- function(target, df=df, regressors = regressors){
xreg<- df %>% select(all_of(regressors)) %>% as.matrix()
y<- df %>% select(all_of(target))
fit<- auto.arima(y = y, xreg = xreg, allowdrift = FALSE, d= 0)
return(fit)
}
fit<- inference("day_ahead_price_ch", regressors = regressors, df = df)
df <- read.csv("../00 Data Retrieval and Cleaning/0_df_predictive_ch_spot_price.csv") %>% mutate(date = ymd_hms(date))
df <- read.csv("../00 Data Retrieval and Cleaning/0_df_predictive_ch_spot_price.csv") %>% mutate(date = ymd_hms(date))
regressors <- c("day_ahead_price_de", "day_ahead_price_fr", "actual_load_ch", "capacity_forecast_de_lu_ch", "solar_ch" ,"crossborder_actual_flow_fr_ch", "nuclear_ch", "nuclear_actual_aggregated_de")
fit<- inference("day_ahead_price_ch", regressors = regressors, df = df)
return(fit)
inference<- function(target, df=df, regressors = regressors){
xreg<- df %>% select(all_of(regressors)) %>% as.matrix()
y<- df %>% select(all_of(target))
fit<- auto.arima(y = y, xreg = xreg, allowdrift = FALSE, max.d= 0)
return(fit)
}
df <- read.csv("../00 Data Retrieval and Cleaning/0_df_predictive_ch_spot_price.csv") %>% mutate(date = ymd_hms(date))
df <- read.csv("../00 Data Retrieval and Cleaning/0_df_predictive_ch_spot_price.csv") %>% mutate(date = ymd_hms(date))
regressors <- c("day_ahead_price_de", "day_ahead_price_fr", "actual_load_ch", "capacity_forecast_de_lu_ch", "solar_ch" ,"crossborder_actual_flow_fr_ch", "nuclear_ch", "nuclear_actual_aggregated_de")
fit<- inference("day_ahead_price_ch", regressors = regressors, df = df)
View(fit)
fit$fitted
pacf<- pacf(fit$residuals, plot = FALSE)
pacf <- data.frame(
pacf = pacf$acf,
lag = pacf$lag
)
ggplot(pacf, aes(x = lag, y = pacf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = ci_aic, linetype = "dashed") +
geom_hline(yintercept = -ci_aic, linetype = "dashed") +
labs(x = "Lags", y = "PACF", title = "PACF for AIC model", subtitle = response)
ggplot(pacf, aes(x = lag, y = pacf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
labs(x = "Lags", y = "PACF", title = "PACF for AIC model", subtitle = response)
ggplot(pacf, aes(x = lag, y = pacf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
ggplot(acf_aic, aes(x = 1:30, y = acf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = acf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = ci_aic, linetype = "dashed") +
geom_hline(yintercept = -ci_aic, linetype = "dashed")
ggplot(acf_aic, aes(x = lags[1:30], y = acf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = acf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = ci_aic, linetype = "dashed") +
geom_hline(yintercept = -ci_aic, linetype = "dashed")
ggplot(pacf, aes(x = lag[1:30], y = pacf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
ggplot(pacf, aes(x = lag[1:30], y = pacf)) +
geom_segment(aes(x = lag[1:30], xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
pl <- ggplot(pacf, aes(x = lag[1:30], y = pacf)) +
geom_segment(aes(x = lag[1:30], xend = lag[1:30], y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
pl <- ggplot(pacf, aes(x = lag, y = pacf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
ggplot(pacf, aes(x = lag, y = pacf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
pl <-
ggplot(pacf, aes(x = lag[1:30], y = pacf)) +
geom_segment(aes(x = lag[1:30], xend = lag[1:30], y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
pl
ggplot(pacf, aes(x = lag[1:30], y = pacf)) +
geom_segment(aes(x = lag[1:30], xend = lag[1:30], y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
ggplot(pacf, aes(x = lag[1:30], y = pacf)) +
geom_segment(aes(x = lag[1:30], xend = lag[1:30], y = 0, yend = pacf[1:30])) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
ggplot(pacf, aes(x = lag[1:30], y = pacf[1:30])) +
geom_segment(aes(x = lag[1:30], xend = lag[1:30], y = 0, yend = pacf[1:30])) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
pacf <- pacf[pacf$lag > 0 & pacf$lag <= 30, ]
ggplot(pacf, aes(x = lag, y = pacf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
ggplot(pacf, aes(x = lag, y = pacf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")+
scale_x_continuous(breaks = seq(1, 30, by = 1))
ggplot(pacf, aes(x = lag, y = pacf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")+
coord_cartesian(xlim = c(1, 30))
pacf<- pacf(fit$residuals, plot = FALSE)
pacf <- data.frame(
pacf = pacf$acf,
lag = pacf$lag
)
ggplot(pacf, aes(x = lag, y = pacf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)), 1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")+
coord_cartesian(xlim = c(1, 30))
acf<- acf(fit$residuals, plot = FALSE)
acf <- data.frame(
acf = acf$acf,
lag = acf$lag
)
p2 <- ggplot(acf, aes(x = lag, y = acf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = acf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = ci_aic, linetype = "dashed") +
geom_hline(yintercept = -ci_aic, linetype = "dashed")
ggplot(acf, aes(x = lag, y = acf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = acf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)),
1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")
ggplot(acf, aes(x = lag, y = acf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = acf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)),
1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")+
coord_cartesian(xlim = c(1, 30))
fitted_values <- data.frame(
fitted = fit$fitted,
actual = df$target,
date = df$date
)
fit$fitted
target="day_ahead_price_ch"
fitted_values <- data.frame(
fitted = fit$fitted,
actual = df$target,
date = df$date
)
df$target
df$day_ahead_price_ch
target=day_ahead_price_ch
df$target
as.vector(select(df, target))
fitted_values <- data.frame(
fitted = fit$fitted,
actual = as.vector(select(df, target)),
date = df$date
)
fitted_values <- fitted_values %>%
mutate(residuals = actual - fitted)
fitted_values
fitted_values <- data.frame(
fitted = fit$fitted,
actual = as.vector(select(df, target)),
date = df$date
)
fitted_values
names(fitted_values)<- c(fitted, actual, date)
names(fitted_values)<- c("fitted", "actual", "date")
fitted_values <- fitted_values %>%
mutate(residuals = actual - fitted)
p3 <- ggplot(fitted_values, aes(x = fitted, y = residuals)) +
geom_point() +
geom_smooth(method = "loess", color = "red") +
geom_hline(yintercept = mean(fitted_values$residuals_aic), linetype = "dashed", col = 'blue') +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x = "Fitted Values", y = "Residuals", title = "Tukey-Anscombe Plot for AICc model", subtitle = target)
p2 <- ggplot(acf, aes(x = lag, y = acf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = acf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)),
1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")+
coord_cartesian(xlim = c(1, 30))+
labs(x = "Lags", y = "ACF", title = "ACF for ARMA model", subtitle = target)
p1 <- ggplot(pacf, aes(x = lag, y = pacf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)),
1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")+
coord_cartesian(xlim = c(1, 30))+
labs(x = "Lags", y = "PACF", title = "PACF for ARMA model", subtitle = target)
gridExtra::grid.arrange(p1,p2,p3, nrow=2)
gridExtra::grid.arrange(p1,p2,p3, nrow=2)
p2
ggplot(acf, aes(x = lag, y = acf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = acf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)),
1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")+
coord_cartesian(xlim = c(1, 30))+
labs(x = "Lags", y = "ACF", title = "ACF for ARMA model", subtitle = target)
p1 <- ggplot(pacf, aes(x = lag, y = pacf)) +
geom_segment(aes(x = lag, xend = lag, y = 0, yend = pacf)) +
geom_point() +
geom_vline(xintercept = 24*(1:5), linetype = "dashed", color = "blue")+
geom_hline(yintercept = 0, linetype = "dashed") +
geom_hline(yintercept = c(-1.96/sqrt(length(fit$residuals)),
1.96/sqrt(length(fit$residuals))),
linetype = "dashed", color = "blue")+
coord_cartesian(xlim = c(1, 30))+
labs(x = "Lags", y = "PACF", title = "PACF for ARMA model", subtitle = target)
p1
ggplot(fitted_values, aes(x = fitted, y = residuals)) +
geom_point() +
geom_smooth(method = "loess", color = "red") +
geom_hline(yintercept = mean(fitted_values$residuals_aic), linetype = "dashed", col = 'blue') +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x = "Fitted Values", y = "Residuals", title = "Tukey-Anscombe Plot for AICc model", subtitle = target)
